{
  "meta": {
    "project": "ClipMe",
    "date": "2025-08-17",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "ClipMe is a professional, modern clipboard sharing application designed for seamless content sharing across devices via simple 4-character room codes. It provides real-time synchronization of clipboard data including text and files with strong security measures such as auto-deletion, client-side encryption, and password-protected rooms, all wrapped in a polished, responsive, and accessible user interface supporting desktop and mobile platforms.",
  "core_goals": [
    "Enable seamless and secure clipboard sharing across multiple devices without requiring user accounts.",
    "Support real-time synchronization of text and files with automatic expiration to protect user privacy.",
    "Provide a professional and accessible UI/UX that is responsive and optimized for all devices, supporting both dark and light themes.",
    "Ensure robust security including JWT authentication, password protection for rooms, encrypted transmission, and no permanent data storage.",
    "Facilitate easy room access through QR code generation and scanning, and intuitive room code input methods."
  ],
  "key_features": [
    "User registration and JWT-based authentication with bcrypt password hashing for secure access.",
    "Create, join, and manage temporary rooms using simple 4-character alphanumeric codes with optional password protection and real-time user counts.",
    "Real-time clipboard sharing for text and file data using WebSocket communication with history and expiration (15 minutes) to ensure privacy.",
    "Drag-and-drop file upload with progress tracking and file type validation within rooms.",
    "QR code integration for quick room joining and sharing of room codes.",
    "Dark/light theme toggle with automatic system preference detection and persistent user setting storage.",
    "Mobile-first design with touch-optimized interfaces and responsive layouts for desktop, tablet, and mobile devices.",
    "React Query-based state management for efficient server state caching and updates.",
    "Comprehensive reusable UI components built with Radix UI and Tailwind CSS ensuring accessibility and consistency.",
    "Secure file handling, room password validation, and JWT verification to maintain privacy and data security.",
    "Client-side encryption for clipboard content before transmission to enhance data confidentiality."
  ],
  "user_flow_summary": [
    "User opens the app and selects to create a new room or join an existing one by entering a 4-character code or scanning a QR code.",
    "If creating a room, user can optionally set a password; room is created and accessible with a real-time user count display.",
    "Users in a room can share clipboard text and files instantly; shared content is visible to all participants and expires after 15 minutes.",
    "The UI adapts responsively to the device being used, providing large touch targets on mobile and keyboard navigation on desktop.",
    "Users can toggle between dark and light themes; their preference is saved and respected automatically.",
    "Rooms and shared data are securely managed; JWT tokens validate authentication, and encrypted connections ensure data safety.",
    "When the user leaves the room or after expiration time, all shared clipboard data is automatically deleted for privacy."
  ],
  "validation_criteria": [
    "User registration and login correctly implement JWT with secure password hashing.",
    "Rooms can be created, joined, and password-protected, denying unauthorized entry.",
    "Clipboard data synchronizes in real-time and expires as expected after 15 minutes.",
    "File upload functionality supports drag-and-drop, shows progress, and validates file types securely.",
    "QR code functionality allows accurate scanning and joining of rooms.",
    "UI components comply with accessibility standards and respond appropriately on mobile and desktop.",
    "Theme switching respects system preferences and retains user settings.",
    "Data security is enforced by client-side encryption, secure connections, and no persistent data storage.",
    "Performance targets for load times and responsiveness are achieved.",
    "Room expiration and data auto-deletion functions operate reliably to protect user privacy."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React",
      "Express.js",
      "Node.js",
      "Vite",
      "Tailwind CSS",
      "WebSocket",
      "PostgreSQL",
      "Drizzle ORM",
      "JWT Authentication",
      "Multer File Upload",
      "React Query",
      "Wouter Router"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "User registration, login, and JWT-based authentication with bcrypt password hashing",
        "files": [
          "client/src/contexts/auth-context.tsx",
          "client/src/components/auth-modal.tsx",
          "server/routes.ts"
        ]
      },
      {
        "name": "Room Management",
        "description": "Create, join, and manage rooms with optional password protection and real-time user count",
        "files": [
          "client/src/components/create-room-modal.tsx",
          "client/src/components/room-password-modal.tsx",
          "client/src/pages/home.tsx",
          "client/src/pages/room.tsx",
          "server/routes.ts"
        ]
      },
      {
        "name": "Clipboard Sharing",
        "description": "Real-time text and file sharing between users in rooms with expiration and history",
        "files": [
          "client/src/pages/room.tsx",
          "client/src/components/enhanced-file-upload.tsx",
          "client/src/components/file-upload.tsx",
          "server/routes.ts",
          "server/storage.ts"
        ]
      },
      {
        "name": "QR Code Integration",
        "description": "Generate and scan QR codes for easy room access and sharing",
        "files": [
          "client/src/components/qr-modal.tsx",
          "client/src/components/qr-scanner.tsx",
          "client/src/pages/home.tsx"
        ]
      },
      {
        "name": "Real-time Communication",
        "description": "WebSocket-based real-time updates for user count, messages, and file sharing",
        "files": [
          "client/src/hooks/use-websocket.tsx",
          "server/index.ts"
        ]
      },
      {
        "name": "File Upload System",
        "description": "Drag-and-drop file uploads with progress tracking and file type validation",
        "files": [
          "client/src/components/enhanced-file-upload.tsx",
          "client/src/components/file-upload.tsx",
          "server/routes.ts"
        ]
      },
      {
        "name": "Theme Management",
        "description": "Dark/light theme switching with system preference detection and persistent storage",
        "files": [
          "client/src/components/theme-provider.tsx",
          "client/src/components/theme-toggle.tsx"
        ]
      },
      {
        "name": "Mobile Responsiveness",
        "description": "Mobile-first design with touch-friendly interfaces and responsive layouts",
        "files": [
          "client/src/hooks/use-mobile.tsx",
          "client/src/pages/home.tsx",
          "client/src/pages/room.tsx"
        ]
      },
      {
        "name": "Data Management",
        "description": "React Query integration for server state management, caching, and optimistic updates",
        "files": [
          "client/src/lib/queryClient.ts",
          "client/src/pages/room.tsx"
        ]
      },
      {
        "name": "Storage System",
        "description": "Database operations for users, rooms, clipboard data, and file metadata with Drizzle ORM",
        "files": [
          "server/storage.ts",
          "shared/schema.ts"
        ]
      },
      {
        "name": "Security Features",
        "description": "Room password protection, JWT token validation, and secure file handling",
        "files": [
          "server/routes.ts",
          "server/storage.ts",
          "client/src/components/room-password-modal.tsx"
        ]
      },
      {
        "name": "UI Components",
        "description": "Comprehensive set of reusable UI components built with Radix UI and Tailwind CSS",
        "files": [
          "client/src/components/ui/button.tsx",
          "client/src/components/ui/card.tsx",
          "client/src/components/ui/dialog.tsx",
          "client/src/components/ui/input.tsx",
          "client/src/components/ui/toast.tsx"
        ]
      },
      {
        "name": "Routing System",
        "description": "Client-side routing with Wouter for navigation between home, room, and error pages",
        "files": [
          "client/src/App.tsx",
          "client/src/pages/home.tsx",
          "client/src/pages/room.tsx",
          "client/src/pages/not-found.tsx"
        ]
      },
      {
        "name": "Development Tools",
        "description": "Vite development server with hot reload, TypeScript compilation, and build optimization",
        "files": [
          "vite.config.ts",
          "tsconfig.json",
          "tailwind.config.ts"
        ]
      }
    ]
  }
}
